{
	"name": "vimacs",
	"displayName": "Vimacs",
	"description": "Provides Emacs keybindings for VSCodeVim",
	"version": "1.0.0",
	"publisher": "migrs",
	"engines": {
		"vscode": "^1.0.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/migrs/vscode-vimacs"
	},
	"categories": [
		"Keymaps"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/src/extension",
	"contributes": {
		"keybindings": [
			{
				"key": "ctrl+f",
				"command": "extension.vim_ctrl+f",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+b",
				"command": "extension.vim_ctrl+b",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+d",
				"command": "editor.action.addSelectionToNextFindMatch",
				"when": "editorTextFocus && editorHasSelection"
			},
			{
				"key": "ctrl+d",
				"command": "extension.vim_ctrl+d",
				"when": "editorTextFocus && !editorHasSelection && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+u",
				"command": "extension.vim_ctrl+u",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+e",
				"command": "extension.vim_ctrl+e",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+y",
				"command": "extension.vim_ctrl+y",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+v",
				"command": "extension.vim_ctrl+v",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+a",
				"command": "extension.vim_ctrl+a",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+x ctrl+x",
				"command": "extension.vim_ctrl+x",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+shift+2",
				"command": "extension.vim_ctrl+shift+2",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+pageup",
				"command": "extension.vim_ctrl+pageup",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+pagedown",
				"command": "extension.vim_ctrl+pagedown",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w h",
				"command": "extension.vim_navigateLeft",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w ctrl+h",
				"command": "extension.vim_navigateLeft",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w j",
				"command": "extension.vim_navigateDown",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w ctrl+j",
				"command": "extension.vim_navigateDown",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w k",
				"command": "extension.vim_navigateUp",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w ctrl+k",
				"command": "extension.vim_navigateUp",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w l",
				"command": "extension.vim_navigateRight",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w ctrl+l",
				"command": "extension.vim_navigateRight",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w ctrl+w",
				"command": "extension.vim_navigateGroups",
				"when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+w",
				"command": "extension.vim_ctrl+w",
				"when": "editorTextFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+w",
				"command": "deleteWordLeft",
				"when": "editorTextFocus && !vim.active"
			},
			{
				"key": "ctrl+x ctrl+f",
				"command": "workbench.action.quickOpen",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x b",
				"command": "workbench.action.showAllEditors",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x ctrl+b",
				"command": "workbench.action.showAllEditors",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x ctrl+s",
				"command": "workbench.action.files.save",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x ctrl+w",
				"command": "workbench.action.files.saveAs",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x k",
				"command": "workbench.action.closeActiveEditor"
			},
			{
				"key": "ctrl+x ctrl-k",
				"command": "workbench.action.closeAllEditors"
			},
			{
				"key": "ctrl+x k",
				"command": "workbench.action.closeWindow",
				"when": "!editorIsOpen"
			},
			{
				"key": "ctrl+x ctrl+n",
				"command": "workbench.action.newWindow"
			},
			{
				"key": "ctrl+x 1",
				"command": "workbench.action.closeEditorsInOtherGroups"
			},
			{
				"key": "ctrl+x 2",
				"command": "workbench.action.splitEditor"
			},
			{
				"key": "ctrl+x 3",
				"command": "workbench.action.toggleEditorGroupLayout"
			},
			{
				"key": "ctrl+x o",
				"command": "workbench.action.navigateEditorGroups"
			},
			{
				"key": "ctrl+x u",
				"command": "undo"
			},
			{
				"key": "alt+w",
				"command": "emacs.action.clipboardCopyAction"
			},
			{
				"key": "ctrl+w",
				"command": "emacs.action.clipboardCutAction",
				"when": "editorHasSelection && !editorReadonly"
			},
			{
				"key": "ctrl+y",
				"command": "emacs.action.clipboardPasteAction",
				"when": "vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+y",
				"command": "emacs.action.clipboardPasteAction",
				"when": "!vim.active"
			},
			{
				"key": "ctrl+'",
				"command": "editor.action.triggerSuggest",
				"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
			},
			{
				"key": "ctrl+'",
				"command": "toggleSuggestionDetails",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+alt+'",
				"command": "editor.action.triggerParameterHints",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+f",
				"command": "cursorRight",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+f",
				"command": "cursorRight",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+f",
				"command": "cursorRightSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+f",
				"command": "cursorRightSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+f",
				"command": "cursorColumnSelectRight",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+f",
				"command": "cursorColumnSelectRight",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "right",
				"command": "cursorRight",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "right",
				"command": "cursorRight",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "right",
				"command": "cursorRightSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "right",
				"command": "cursorRightSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "right",
				"command": "cursorColumnSelectRight",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "right",
				"command": "cursorColumnSelectRight",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "ctrl+b",
				"command": "cursorLeft",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+b",
				"command": "cursorLeft",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+b",
				"command": "cursorLeftSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+b",
				"command": "cursorLeftSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+b",
				"command": "cursorColumnSelectLeft",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+b",
				"command": "cursorColumnSelectLeft",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "left",
				"command": "cursorLeft",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "left",
				"command": "cursorLeft",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "left",
				"command": "cursorLeftSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "left",
				"command": "cursorLeftSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "left",
				"command": "cursorColumnSelectLeft",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "left",
				"command": "cursorColumnSelectLeft",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "ctrl+p",
				"command": "cursorUp",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+p",
				"command": "cursorUp",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+p",
				"command": "cursorUpSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+p",
				"command": "cursorUpSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+p",
				"command": "cursorColumnSelectUp",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+p",
				"command": "cursorColumnSelectUp",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "up",
				"command": "cursorUp",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "up",
				"command": "cursorUp",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && !vim.active"
			},
			{
				"key": "up",
				"command": "cursorUpSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "up",
				"command": "cursorUpSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "up",
				"command": "cursorColumnSelectUp",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "up",
				"command": "cursorColumnSelectUp",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "ctrl+n",
				"command": "cursorDown",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+n",
				"command": "cursorDown",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+n",
				"command": "cursorDownSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+n",
				"command": "cursorDownSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+n",
				"command": "cursorColumnSelectDown",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+n",
				"command": "cursorColumnSelectDown",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "down",
				"command": "cursorDown",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "down",
				"command": "cursorDown",
				"when": "editorTextFocus && !suggestWidgetVisible && !inRegionMode && !vim.active"
			},
			{
				"key": "down",
				"command": "cursorDownSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "down",
				"command": "cursorDownSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "down",
				"command": "cursorColumnSelectDown",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "down",
				"command": "cursorColumnSelectDown",
				"when": "editorTextFocus && inRegionMode && inColumnRegionMode && !vim.active"
			},
			{
				"key": "alt+f",
				"command": "cursorWordRight",
				"when": "editorTextFocus && !inRegionMode"
			},
			{
				"key": "alt+f",
				"command": "cursorWordRightSelect",
				"when": "editorTextFocus && inRegionMode"
			},
			{
				"key": "alt+b",
				"command": "cursorWordLeft",
				"when": "editorTextFocus && !inRegionMode"
			},
			{
				"key": "alt+b",
				"command": "cursorWordLeftSelect",
				"when": "editorTextFocus && inRegionMode"
			},
			{
				"key": "ctrl+right",
				"command": "cursorWordEndRight",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+right",
				"command": "cursorWordEndRight",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+right",
				"command": "cursorWordEndRightSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+right",
				"command": "cursorWordEndRightSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+left",
				"command": "cursorWordStartLeft",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+left",
				"command": "cursorWordStartLeft",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+left",
				"command": "cursorWordStartLeftSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+left",
				"command": "cursorWordStartLeftSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "alt+v",
				"command": "cursorPageUp",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "alt+v",
				"command": "cursorPageUp",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "alt+v",
				"command": "cursorPageUpSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "alt+v",
				"command": "cursorPageUpSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+v",
				"command": "cursorPageDown",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+v",
				"command": "cursorPageDown",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+v",
				"command": "cursorPageDownSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+v",
				"command": "cursorPageDownSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+a",
				"command": "cursorHome",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+a",
				"command": "cursorHome",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+a",
				"command": "cursorHomeSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+a",
				"command": "cursorHomeSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+e",
				"command": "cursorEnd",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+e",
				"command": "cursorEnd",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+e",
				"command": "cursorEndSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+e",
				"command": "cursorEndSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "shift+alt+,",
				"command": "cursorTop",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "shift+alt+,",
				"command": "cursorTop",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "shift+alt+,",
				"command": "cursorTopSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "shift+alt+,",
				"command": "cursorTopSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "shift+alt+.",
				"command": "cursorBottom",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "shift+alt+.",
				"command": "cursorBottom",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "shift+alt+.",
				"command": "cursorBottomSelect",
				"when": "editorTextFocus && inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "shift+alt+.",
				"command": "cursorBottomSelect",
				"when": "editorTextFocus && inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+h",
				"command": "deleteLeft",
				"when": "editorTextFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+h",
				"command": "deleteLeft",
				"when": "editorTextFocus && !vim.active"
			},
			{
				"key": "ctrl+d",
				"command": "deleteRight",
				"when": "editorTextFocus && !editorHasSelection && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+d",
				"command": "deleteRight",
				"when": "editorTextFocus && !editorHasSelection && !vim.active"
			},
			{
				"key": "alt+d",
				"command": "deleteWordRight",
				"when": "editorTextFocus"
			},
			{
				"key": "alt+backspace",
				"command": "deleteWordLeft",
				"when": "editorTextFocus"
			},
			{
				"key": "alt+h",
				"command": "deleteWordLeft",
				"when": "editorTextFocus"
			},
			{
				"key": "alt+;",
				"command": "editor.action.commentLine",
				"when": "editorTextFocus"
			},
			{
				"key": "alt+x",
				"command": "workbench.action.showCommands"
			},
			{
				"key": "ctrl+s",
				"command": "actions.find",
				"when": "editorTextFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+s",
				"command": "actions.find",
				"when": "editorTextFocus && !vim.active"
			},
			{
				"key": "ctrl+s",
				"command": "editor.action.nextMatchFindAction",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+r",
				"command": "actions.find",
				"when": "editorTextFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+r",
				"command": "actions.find",
				"when": "editorTextFocus && !vim.active"
			},
			{
				"key": "ctrl+r",
				"command": "editor.action.previousMatchFindAction",
				"when": "editorFocus && findWidgetVisible && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+r",
				"command": "editor.action.previousMatchFindAction",
				"when": "editorFocus && findWidgetVisible && !vim.active"
			},
			{
				"key": "ctrl+h",
				"command": "emacs.deleteLeft",
				"when": "inRegionMode"
			},
			{
				"key": "backspace",
				"command": "emacs.deleteLeft",
				"when": "inRegionMode"
			},
			{
				"key": "delete",
				"command": "emacs.deleteRight",
				"when": "inRegionMode"
			},
			{
				"key": "ctrl+space",
				"command": "emacs.startRegionMode",
				"when": "editorFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+space",
				"command": "emacs.startRegionMode",
				"when": "editorFocus && !vim.active"
			},
			{
				"key": "ctrl+x space",
				"command": "emacs.startColumnRegionMode",
				"when": "editorFocus && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+x space",
				"command": "emacs.startColumnRegionMode",
				"when": "editorFocus && !vim.active"
			},
			{
				"key": "ctrl+g",
				"command": "cancelSelection",
				"when": "editorFocus && editorHasSelection"
			},
			{
				"key": "ctrl+g",
				"command": "emacs.exitRegionMode",
				"when": "inRegionMode"
			},
			{
				"key": "ctrl+g",
				"command": "toggleVim",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+g",
				"command": "extension.vim_escape",
				"when": "editorTextFocus && !inRegionMode && vim.active"
			},
			{
				"key": "ctrl+/",
				"command": "undo",
				"when": "editorTextFocus && !inRegionMode"
			},
			{
				"key": "ctrl+r",
				"command": "redo",
				"when": "editorTextFocus && !inRegionMode"
			},
			{
				"key": "ctrl+x v",
				"command": "toggleVim",
				"when": "editorTextFocus && !inRegionMode && !editorReadonly"
			},
			{
				"key": "ctrl+[",
				"command": "toggleVim",
				"when": "editorTextFocus && !vim.active"
			},
			{
				"key": "ctrl+[",
				"command": "extension.vim_escape",
				"when": "editorTextFocus && !inRegionMode && vim.active"
			},
			{
				"key": "ctrl+shift+enter",
				"command": "emacs.action.insertLineBefore",
				"when": "editorTextFocus && !editorReadonly && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+enter",
				"command": "emacs.action.insertLineAfter",
				"when": "editorTextFocus && !editorReadonly && vim.active && vim.mode != 'Insert'"
			},
			{
				"key": "ctrl+k",
				"command": "emacs.cutAllRight",
				"when": "editorTextFocus && !inRegionMode && vim.mode == 'Insert'"
			},
			{
				"key": "ctrl+k",
				"command": "emacs.cutAllRight",
				"when": "editorTextFocus && !inRegionMode && !vim.active"
			},
			{
				"key": "ctrl+l",
				"command": "emacs.scrollLineToCenter",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+p",
				"command": "showPrevParameterHint",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+n",
				"command": "showNextParameterHint",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+p",
				"command": "selectPrevQuickFix",
				"when": "editorFocus && quickFixWidgetVisible"
			},
			{
				"key": "ctrl+n",
				"command": "selectNextQuickFix",
				"when": "editorFocus && quickFixWidgetVisible"
			},
			{
				"key": "ctrl+p",
				"command": "selectPrevSuggestion",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+n",
				"command": "selectNextSuggestion",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+p",
				"command": "workbench.action.quickOpenNavigatePrevious",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+n",
				"command": "workbench.action.quickOpenNavigateNext",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+g",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeReferenceSearchEditor",
				"when": "inReferenceSearchEditor && !config.editor.stablePeek"
			},
			{
				"key": "ctrl+g",
				"command": "closeReferenceSearch",
				"when": "referenceSearchVisible && !config.editor.stablePeek"
			},
			{
				"key": "ctrl+g",
				"command": "removeSecondaryCursors",
				"when": "editorHasMultipleSelections && editorTextFocus"
			},
			{
				"key": "ctrl+g",
				"command": "closeBreakpointWidget",
				"when": "breakpointWidgetVisible && editorFocus"
			},
			{
				"key": "ctrl+g",
				"command": "leaveSnippet",
				"when": "editorTextFocus && inSnippetMode"
			},
			{
				"key": "ctrl+g",
				"command": "closeMarkersNavigation",
				"when": "editorFocus && markersNavigationVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeParameterHints",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+g",
				"command": "hideSuggestWidget",
				"when": "editorFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+g",
				"command": "cancelRenameInput",
				"when": "editorFocus && renameInputVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeAccessibilityHelp",
				"when": "accessibilityHelpWidgetVisible && editorFocus"
			},
			{
				"key": "ctrl+g",
				"command": "closeReplaceInFilesWidget",
				"when": "replaceInputBoxFocus && searchViewletVisible"
			},
			{
				"key": "ctrl+g",
				"command": "workbench.action.closeMessages",
				"when": "globalMessageVisible"
			},
			{
				"key": "ctrl+g",
				"command": "workbench.action.closeQuickOpen",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+j",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+p",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+n",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+e",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+a",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+f",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+b",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+[",
				"command": "",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+m",
				"command": "",
				"when": "terminalFocus"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "node ./node_modules/vscode/bin/compile",
		"compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"devDependencies": {
		"typescript": "^1.7.5",
		"vscode": "^0.11.0"
	},
	"extensionDependencies": [
		"vscodevim.vim"
	]
}
